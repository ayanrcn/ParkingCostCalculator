<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="18" passed="17" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-01-29T22:30:20 IST" name="Default suite" finished-at="2025-01-29T22:30:43 IST" duration-ms="22973">
    <groups>
    </groups>
    <test started-at="2025-01-29T22:30:20 IST" name="Default test" finished-at="2025-01-29T22:30:43 IST" duration-ms="22973">
      <class name="costcalculationTest.TestClass">
        <test-method is-config="true" signature="setup()[pri:0, instance:costcalculationTest.TestClass@4c39bec8]" started-at="2025-01-29T22:30:20 IST" name="setup" finished-at="2025-01-29T22:30:22 IST" duration-ms="1733" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="pagetitle()[pri:1, instance:costcalculationTest.TestClass@4c39bec8]" started-at="2025-01-29T22:30:22 IST" name="pagetitle" finished-at="2025-01-29T22:30:23 IST" duration-ms="1603" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pagetitle -->
        <test-method signature="getRates()[pri:2, instance:costcalculationTest.TestClass@4c39bec8]" started-at="2025-01-29T22:30:23 IST" name="getRates" finished-at="2025-01-29T22:30:24 IST" duration-ms="484" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRates -->
        <test-method signature="parkinglot()[pri:3, instance:costcalculationTest.TestClass@4c39bec8]" started-at="2025-01-29T22:30:24 IST" name="parkinglot" finished-at="2025-01-29T22:30:24 IST" duration-ms="91" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parkinglot -->
        <test-method signature="valet24hour()[pri:4, instance:costcalculationTest.TestClass@4c39bec8]" started-at="2025-01-29T22:30:24 IST" name="valet24hour" finished-at="2025-01-29T22:30:25 IST" duration-ms="1452" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valet24hour -->
        <test-method signature="valet6hour()[pri:5, instance:costcalculationTest.TestClass@4c39bec8]" started-at="2025-01-29T22:30:25 IST" name="valet6hour" finished-at="2025-01-29T22:30:27 IST" duration-ms="1426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valet6hour -->
        <test-method signature="valet5hour()[pri:6, instance:costcalculationTest.TestClass@4c39bec8]" started-at="2025-01-29T22:30:27 IST" name="valet5hour" finished-at="2025-01-29T22:30:28 IST" duration-ms="1549" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valet5hour -->
        <test-method signature="valet4hour59min()[pri:7, instance:costcalculationTest.TestClass@4c39bec8]" started-at="2025-01-29T22:30:28 IST" name="valet4hour59min" finished-at="2025-01-29T22:30:30 IST" duration-ms="1393" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valet4hour59min -->
        <test-method signature="valetTimeblank()[pri:8, instance:costcalculationTest.TestClass@4c39bec8]" started-at="2025-01-29T22:30:30 IST" name="valetTimeblank" finished-at="2025-01-29T22:30:31 IST" duration-ms="1100" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valetTimeblank -->
        <test-method signature="valetDateblank()[pri:9, instance:costcalculationTest.TestClass@4c39bec8]" started-at="2025-01-29T22:30:31 IST" name="valetDateblank" finished-at="2025-01-29T22:30:31 IST" duration-ms="769" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valetDateblank -->
        <test-method signature="Economyparkinglot()[pri:10, instance:costcalculationTest.TestClass@4c39bec8]" started-at="2025-01-29T22:30:31 IST" name="Economyparkinglot" finished-at="2025-01-29T22:30:32 IST" duration-ms="83" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Economyparkinglot -->
        <test-method signature="Economy24hour()[pri:11, instance:costcalculationTest.TestClass@4c39bec8]" started-at="2025-01-29T22:30:32 IST" name="Economy24hour" finished-at="2025-01-29T22:30:33 IST" duration-ms="1601" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Economy24hour -->
        <test-method signature="Economy6hour()[pri:12, instance:costcalculationTest.TestClass@4c39bec8]" started-at="2025-01-29T22:30:33 IST" name="Economy6hour" finished-at="2025-01-29T22:30:35 IST" duration-ms="1476" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Economy6hour -->
        <test-method signature="Economy1hour30min()[pri:13, instance:costcalculationTest.TestClass@4c39bec8]" started-at="2025-01-29T22:30:35 IST" name="Economy1hour30min" finished-at="2025-01-29T22:30:36 IST" duration-ms="1468" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Economy1hour30min -->
        <test-method signature="Economy4hour59min()[pri:14, instance:costcalculationTest.TestClass@4c39bec8]" started-at="2025-01-29T22:30:36 IST" name="Economy4hour59min" finished-at="2025-01-29T22:30:38 IST" duration-ms="1662" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[wrong cost displaying expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: wrong cost displaying expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at costcalculationTest.TestClass.Economy4hour59min(TestClass.java:262)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Economy4hour59min -->
        <test-method signature="EconomyTimeblank()[pri:15, instance:costcalculationTest.TestClass@4c39bec8]" started-at="2025-01-29T22:30:38 IST" name="EconomyTimeblank" finished-at="2025-01-29T22:30:39 IST" duration-ms="1176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EconomyTimeblank -->
        <test-method signature="Economy20hour()[pri:16, instance:costcalculationTest.TestClass@4c39bec8]" started-at="2025-01-29T22:30:39 IST" name="Economy20hour" finished-at="2025-01-29T22:30:41 IST" duration-ms="1525" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Economy20hour -->
        <test-method signature="EconomyDateblank()[pri:16, instance:costcalculationTest.TestClass@4c39bec8]" started-at="2025-01-29T22:30:41 IST" name="EconomyDateblank" finished-at="2025-01-29T22:30:41 IST" duration-ms="762" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EconomyDateblank -->
        <test-method signature="Economy7day()[pri:17, instance:costcalculationTest.TestClass@4c39bec8]" started-at="2025-01-29T22:30:41 IST" name="Economy7day" finished-at="2025-01-29T22:30:43 IST" duration-ms="1496" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Economy7day -->
      </class> <!-- costcalculationTest.TestClass -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
